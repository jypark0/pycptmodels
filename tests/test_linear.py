import numpy as np

from pycptmodels.input import PoissonProcessInput
from pycptmodels.linear import LinearModel


def test_train(flowline):
    input1 = PoissonProcessInput(N=50, lambda_=1500, lotsizes=[5], lotsize_weights=[1], reticle=[250, 250],
                                 prescan=[0, 0], K=3)
    input1.initialize()
    input1.A = [0, 400, 900, 1300, 4800, 6600, 8700, 10300, 11100, 12000, 13800, 15300, 15800, 22000, 23000, 24300,
                27200, 30900, 32900, 33400, 35900, 36400, 36700, 37400, 39300, 40200, 44300, 46500, 49400, 50000, 51600,
                51600, 54400, 55900, 58400, 58700, 60100, 61800, 63300, 64100, 65000, 68600, 68600, 69800, 74800, 76900,
                77800, 80200, 81700, 82000]
    input1.lotclass = [2, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 2, 1, 0, 1, 0, 0, 1, 0, 0, 2, 2, 2, 2, 0, 2, 0,
                       1, 0, 2, 2, 2, 2, 1, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 1]

    FL = flowline
    FL.initialize()
    FL.run(input1)

    LM = LinearModel()
    LM.train(input1, FL.C)

    assert np.allclose(LM.A, [246.4736842, 262.0222222, 326.6333333])


def test_run(flowline):
    input1 = PoissonProcessInput(N=50, lambda_=1500, lotsizes=[5], lotsize_weights=[1], reticle=[250, 250],
                                 prescan=[0, 0], K=3)
    input1.initialize()
    input1.A = [0, 400, 900, 1300, 4800, 6600, 8700, 10300, 11100, 12000, 13800, 15300, 15800, 22000, 23000, 24300,
                27200, 30900, 32900, 33400, 35900, 36400, 36700, 37400, 39300, 40200, 44300, 46500, 49400, 50000, 51600,
                51600, 54400, 55900, 58400, 58700, 60100, 61800, 63300, 64100, 65000, 68600, 68600, 69800, 74800, 76900,
                77800, 80200, 81700, 82000]
    input1.lotclass = [2, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 1, 2, 1, 0, 1, 0, 0, 1, 0, 0, 2, 2, 2, 2, 0, 2, 0,
                       1, 0, 2, 2, 2, 2, 1, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 1]

    FL = flowline
    FL.initialize()
    FL.run(input1)

    LM = LinearModel()
    LM.train(input1, FL.C)
    LM.run(input1)

    assert np.allclose(LM.S,
                       [0.00, 1633.17, 2943.28, 4175.65, 5408.01, 6718.13, 8700.00, 10300.00, 11532.37, 12842.48,
                        14152.59, 15462.70, 16695.07, 22000.00, 23310.11, 24943.28, 27200.00, 30900.00, 32900.00,
                        34132.37, 35900.00, 37132.37, 38364.74, 39674.85, 40907.22, 42139.58, 44300.00, 46500.00,
                        49400.00, 51033.17, 52265.54, 53898.70, 55131.07, 56441.18, 58400.00, 60033.17, 61666.33,
                        63299.50, 64932.67, 66242.78, 67475.15, 68707.51, 70340.68, 71650.79, 74800.00, 76900.00,
                        78132.37, 80200.00, 81700.00, 83010.11])
    assert np.allclose(LM.C,
                       [1633.17, 2943.28, 4175.65, 5408.01, 6718.13, 8028.24, 10010.11, 11532.37, 12842.48, 14152.59,
                        15462.70, 16695.07, 18005.18, 23310.11, 24943.28, 26253.39, 28833.17, 32210.11, 34132.37,
                        35442.48, 37132.37, 38364.74, 39674.85, 40907.22, 42139.58, 43772.75, 45933.17, 48133.17,
                        51033.17, 52265.54, 53898.70, 55131.07, 56441.18, 57673.55, 60033.17, 61666.33, 63299.50,
                        64932.67, 66242.78, 67475.15, 68707.51, 70340.68, 71650.79, 72883.16, 76032.37, 78132.37,
                        79364.74, 81432.37, 83010.11, 84320.22])

    assert np.allclose(LM.CT,
                       [1633.17, 2543.28, 3275.65, 4108.01, 1918.13, 1428.24, 1310.11, 1232.37, 1742.48, 2152.59,
                        1662.70, 1395.07, 2205.18, 1310.11, 1943.28, 1953.39, 1633.17, 1310.11, 1232.37, 2042.48,
                        1232.37, 1964.74, 2974.85, 3507.22, 2839.58, 3572.75, 1633.17, 1633.17, 1633.17, 2265.54,
                        2298.70, 3531.07, 2041.18, 1773.55, 1633.17, 2966.33, 3199.50, 3132.67, 2942.78, 3375.15,
                        3707.51, 1740.68, 3050.79, 3083.16, 1232.37, 1232.37, 1564.74, 1232.37, 1310.11, 2320.22])
    assert np.allclose(LM.LRT,
                       [1633.17, 1310.11, 1232.37, 1232.37, 1310.11, 1310.11, 1310.11, 1232.37, 1310.11, 1310.11,
                        1310.11, 1232.37, 1310.11, 1310.11, 1633.17, 1310.11, 1633.17, 1310.11, 1232.37, 1310.11,
                        1232.37, 1232.37, 1310.11, 1232.37, 1232.37, 1633.17, 1633.17, 1633.17, 1633.17, 1232.37,
                        1633.17, 1232.37, 1310.11, 1232.37, 1633.17, 1633.17, 1633.17, 1633.17, 1310.11, 1232.37,
                        1232.37, 1633.17, 1310.11, 1232.37, 1232.37, 1232.37, 1232.37, 1232.37, 1310.11, 1310.11])
    assert np.allclose(LM.TT,
                       [1633.17, 1310.11, 1232.37, 1232.37, 1310.11, 1310.11, 1310.11, 1232.37, 1310.11, 1310.11,
                        1310.11, 1232.37, 1310.11, 1310.11, 1633.17, 1310.11, 1633.17, 1310.11, 1232.37, 1310.11,
                        1232.37, 1232.37, 1310.11, 1232.37, 1232.37, 1633.17, 1633.17, 1633.17, 1633.17, 1232.37,
                        1633.17, 1232.37, 1310.11, 1232.37, 1633.17, 1633.17, 1633.17, 1633.17, 1310.11, 1232.37,
                        1232.37, 1633.17, 1310.11, 1232.37, 1232.37, 1232.37, 1232.37, 1232.37, 1310.11, 1310.11])

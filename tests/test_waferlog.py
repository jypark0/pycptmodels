import numpy as np

from pycptmodels.erm import WaferERM
from pycptmodels.input import PoissonProcessInput


def test_train(flowline):
    input1 = PoissonProcessInput(N=200, lambda_=1500, lotsizes=[5], lotsize_weights=[
        1], reticle=[200, 200], prescan=[400, 400], K=3)
    input1.initialize()
    input1.A = [0, 100, 900, 8100, 8500, 11900, 12100, 19100, 20100, 20800, 20800, 24300, 24600, 25400, 27700, 29900,
                30100, 30300, 31300, 33200, 37800, 38900, 39600, 40800, 41000, 42000, 44900, 46300, 47300, 50200, 51500,
                52300, 52900, 53900, 61300, 62200, 62400, 64900, 66100, 67500, 71700, 72000, 72800, 75400, 75600, 75900,
                77100, 77300, 77400, 80000, 81900, 81900, 82600, 85700, 86300, 87000, 89200, 95300, 95500, 95800, 97800,
                99500, 101000, 104800, 105700, 108900, 108900, 110000, 111000, 112800, 113300, 114600, 114600, 115900,
                119900, 120700, 121100, 126100, 130100, 138600, 139500, 139600, 140200, 143000, 144300, 144700, 146500,
                148400, 150000, 151000, 151600, 151900, 152700, 154000, 155700, 156100, 160100, 160300, 160500, 161700,
                163000, 164400, 164700, 172400, 172400, 174600, 179500, 180300, 181100, 182500, 184500, 186100, 186800,
                190000, 190000, 191600, 193300, 194100, 199100, 199700, 200600, 203300, 204700, 206800, 207100, 208700,
                210300, 216500, 218400, 225600, 226000, 226900, 227900, 228000, 229400, 230300, 231200, 232700, 237100,
                239700, 241200, 243000, 243700, 245500, 246400, 248500, 248700, 248900, 249800, 250300, 250600, 250900,
                252700, 256700, 257000, 257400, 257700, 266200, 267200, 267900, 272200, 272700, 273800, 275900, 277700,
                278900, 280700, 280900, 282300, 283000, 285300, 285600, 286400, 287600, 289300, 290100, 292000, 292100,
                292200, 292300, 293000, 293100, 293300, 293300, 296300, 296500, 297700, 302700, 303600, 303900, 304000,
                305600, 308500, 308700, 311100, 311900, 314500, 315300, 315300, 315600]
    input1.lotclass = [0, 2, 0, 0, 2, 0, 1, 2, 0, 1, 1, 0, 2, 1, 1, 1, 2, 0, 2, 1, 1, 1, 2, 2, 0, 1, 1, 0, 2, 0, 0, 0,
                       2, 2, 0, 2, 2, 0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 2, 0, 2, 2, 1, 1, 1, 2, 2, 0, 0, 2, 0, 1, 2, 2, 1,
                       1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 0, 2, 0, 0, 2, 1, 1, 2, 0, 2, 1, 0, 1, 1, 0, 0, 0, 2, 0, 2, 2, 1,
                       2, 2, 2, 0, 2, 0, 0, 1, 1, 2, 1, 0, 1, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 1, 1, 2, 0, 1, 0, 1, 1,
                       0, 2, 2, 0, 1, 1, 0, 0, 1, 2, 1, 1, 0, 1, 0, 2, 2, 0, 1, 1, 1, 0, 0, 0, 2, 2, 0, 1, 1, 2, 1, 2,
                       0, 2, 2, 1, 2, 1, 2, 2, 2, 1, 0, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 2, 1, 0, 2, 0, 1,
                       1, 2, 1, 1, 2, 2, 1, 2]

    FL = flowline
    FL.initialize()
    FL.run(input1)

    erm = WaferERM()
    erm.train(input1, FL.L, FL.S, FL.C, FL.S_w, FL.C_w, FL.R)

    assert np.array_equal(erm.phi1,
                          [3, 5, 7, 20, 29, 34, 40, 57, 63, 65, 74, 77, 78, 79, 88, 96, 103, 106, 113, 118, 123, 127,
                           128, 129, 138, 139, 140, 145, 153, 157, 160, 170, 187, 196])
    assert np.array_equal(erm.A1, [110., 110., 110.])
    assert np.array_equal(erm.B1, [1433., 1433., 1603.])

    assert np.array_equal(erm.phi2,
                          [10, 36, 44, 50, 52, 67, 68, 72, 97, 98, 102, 104, 115, 130, 133, 135, 147, 148, 150, 151,
                           156, 162, 167, 172, 177, 178, 179, 180, 182, 184, 185])
    assert np.array_equal(erm.A2, [110., 110., 110.])
    assert np.array_equal(erm.B2, [310., 310., 310.])

    assert np.allclose(erm.Dm, [2431.75, 2069.25, 2178.090909])
    assert np.allclose(erm.Dp, [2431.75, 2069.25, 2178.090909])

    assert np.allclose(erm.E, [[1224.333333, 1521.666667, 1847.153846], [1728.684211, 1057, 2150.636364],
                               [1646.076923, 2189.545455, 273.95]])


def test_run(flowline):
    input1 = PoissonProcessInput(N=200, lambda_=1500, lotsizes=[5], lotsize_weights=[
        1], reticle=[200, 200], prescan=[400, 400], K=3)
    input1.initialize()
    input1.A = [0, 100, 900, 8100, 8500, 11900, 12100, 19100, 20100, 20800, 20800, 24300, 24600, 25400, 27700, 29900,
                30100, 30300, 31300, 33200, 37800, 38900, 39600, 40800, 41000, 42000, 44900, 46300, 47300, 50200, 51500,
                52300, 52900, 53900, 61300, 62200, 62400, 64900, 66100, 67500, 71700, 72000, 72800, 75400, 75600, 75900,
                77100, 77300, 77400, 80000, 81900, 81900, 82600, 85700, 86300, 87000, 89200, 95300, 95500, 95800, 97800,
                99500, 101000, 104800, 105700, 108900, 108900, 110000, 111000, 112800, 113300, 114600, 114600, 115900,
                119900, 120700, 121100, 126100, 130100, 138600, 139500, 139600, 140200, 143000, 144300, 144700, 146500,
                148400, 150000, 151000, 151600, 151900, 152700, 154000, 155700, 156100, 160100, 160300, 160500, 161700,
                163000, 164400, 164700, 172400, 172400, 174600, 179500, 180300, 181100, 182500, 184500, 186100, 186800,
                190000, 190000, 191600, 193300, 194100, 199100, 199700, 200600, 203300, 204700, 206800, 207100, 208700,
                210300, 216500, 218400, 225600, 226000, 226900, 227900, 228000, 229400, 230300, 231200, 232700, 237100,
                239700, 241200, 243000, 243700, 245500, 246400, 248500, 248700, 248900, 249800, 250300, 250600, 250900,
                252700, 256700, 257000, 257400, 257700, 266200, 267200, 267900, 272200, 272700, 273800, 275900, 277700,
                278900, 280700, 280900, 282300, 283000, 285300, 285600, 286400, 287600, 289300, 290100, 292000, 292100,
                292200, 292300, 293000, 293100, 293300, 293300, 296300, 296500, 297700, 302700, 303600, 303900, 304000,
                305600, 308500, 308700, 311100, 311900, 314500, 315300, 315300, 315600]
    input1.lotclass = [0, 2, 0, 0, 2, 0, 1, 2, 0, 1, 1, 0, 2, 1, 1, 1, 2, 0, 2, 1, 1, 1, 2, 2, 0, 1, 1, 0, 2, 0, 0, 0,
                       2, 2, 0, 2, 2, 0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 2, 0, 2, 2, 1, 1, 1, 2, 2, 0, 0, 2, 0, 1, 2, 2, 1,
                       1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 0, 2, 0, 0, 2, 1, 1, 2, 0, 2, 1, 0, 1, 1, 0, 0, 0, 2, 0, 2, 2, 1,
                       2, 2, 2, 0, 2, 0, 0, 1, 1, 2, 1, 0, 1, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 1, 1, 2, 0, 1, 0, 1, 1,
                       0, 2, 2, 0, 1, 1, 0, 0, 1, 2, 1, 1, 0, 1, 0, 2, 2, 0, 1, 1, 1, 0, 0, 0, 2, 2, 0, 1, 1, 2, 1, 2,
                       0, 2, 2, 1, 2, 1, 2, 2, 2, 1, 0, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 2, 1, 0, 2, 0, 1,
                       1, 2, 1, 1, 2, 2, 1, 2]

    FL = flowline
    FL.initialize()
    FL.run(input1)

    erm = WaferERM()
    erm.train(input1, FL.L, FL.S, FL.C, FL.S_w, FL.C_w, FL.R)
    erm.run(input1)

    assert np.allclose(erm.V,
                       [-558.75, 1610.99, 2899.39, 8765.58, 10276.57, 13188.40, 14720.84, 21154.45, 22442.86, 23975.29,
                        24836.04, 25798.96, 27309.95, 29264.33, 30125.08, 30985.83, 33040.29, 34328.69, 35839.68,
                        37794.06, 38660.75, 39760.75, 41815.20, 42565.20, 43853.61, 45386.04, 46246.79, 47262.92,
                        48810.99, 51488.40, 52238.40, 52988.40, 54499.39, 55249.39, 62588.40, 64099.39, 64849.39,
                        66188.40, 67720.84, 68683.75, 73232.43, 74195.35, 75706.34, 76994.74, 77744.74, 79255.73,
                        80544.13, 82055.12, 83343.52, 84854.51, 85604.51, 87558.89, 88419.64, 89280.39, 91334.85,
                        92084.85, 93373.25, 95965.58, 97476.57, 98764.97, 100297.41, 102351.86, 103101.86, 106754.39,
                        107615.14, 110954.45, 112908.84, 113769.59, 114630.34, 116684.80, 118639.18, 119602.10,
                        120352.10, 121863.08, 123151.49, 124662.47, 125950.88, 126765.58, 131610.99, 140554.39,
                        141415.14, 143469.59, 144757.99, 146268.98, 148223.37, 149186.28, 150718.72, 151579.47,
                        152542.38, 153292.38, 154042.38, 155553.37, 156841.77, 158352.76, 159102.76, 161057.15,
                        163111.60, 163861.60, 164611.60, 165900.01, 167410.99, 168699.40, 169449.40, 173932.43,
                        174793.18, 176847.64, 181454.39, 182417.30, 183949.74, 186004.19, 187958.58, 190013.03,
                        191301.44, 192812.42, 194766.81, 195627.56, 196488.31, 197349.06, 199960.75, 200923.67,
                        202456.10, 204160.75, 206754.45, 208088.40, 209620.84, 210583.75, 212116.19, 217360.75,
                        219362.92, 227110.99, 227860.99, 229149.39, 230681.82, 231542.57, 232505.49, 233255.49,
                        234787.92, 236842.38, 239054.39, 240560.75, 242162.92, 244532.43, 245495.35, 247010.99,
                        247760.99, 249788.40, 251320.84, 252181.59, 253042.34, 254005.25, 254755.25, 255505.25,
                        257016.24, 257766.24, 259054.64, 260587.08, 261447.83, 268254.45, 270208.84, 272263.30,
                        273551.70, 275062.69, 275812.69, 277854.39, 279908.84, 281863.23, 283917.68, 284667.68,
                        285417.68, 287372.07, 288334.98, 289867.42, 290728.17, 291588.92, 293643.37, 295597.76,
                        297652.21, 298402.21, 299152.21, 299902.21, 300652.21, 302606.60, 303467.35, 304430.27,
                        305180.27, 305930.27, 307441.25, 309395.64, 310358.56, 311869.54, 313157.95, 314690.38,
                        315551.13, 317605.59, 319559.97, 320420.72, 322475.18, 323225.18, 325179.56, 0.],
                       rtol=1e-4, atol=1e-5)
    assert np.allclose(erm.L,
                       [0.00, 100.00, 1610.99, 8100.00, 8765.58, 11900.00, 13188.40, 19100.00, 21154.45, 22442.86,
                        23975.29, 24836.04, 25798.96, 27309.95, 29264.33, 30125.08, 30985.83, 33040.29, 34328.69,
                        35839.68, 37800.00, 38900.00, 39760.75, 41815.20, 42565.20, 43853.61, 45386.04, 46300.00,
                        47300.00, 50200.00, 51500.00, 52300.00, 52988.40, 54499.39, 61300.00, 62588.40, 64099.39,
                        64900.00, 66188.40, 67720.84, 71700.00, 73232.43, 74195.35, 75706.34, 76994.74, 77744.74,
                        79255.73, 80544.13, 82055.12, 83343.52, 84854.51, 85604.51, 87558.89, 88419.64, 89280.39,
                        91334.85, 92084.85, 95300.00, 95965.58, 97476.57, 98764.97, 100297.41, 102351.86, 104800.00,
                        106754.39, 108900.00, 110954.45, 112908.84, 113769.59, 114630.34, 116684.80, 118639.18,
                        119602.10, 120352.10, 121863.08, 123151.49, 124662.47, 126100.00, 130100.00, 138600.00,
                        140554.39, 141415.14, 143469.59, 144757.99, 146268.98, 148223.37, 149186.28, 150718.72,
                        151579.47, 152542.38, 153292.38, 154042.38, 155553.37, 156841.77, 158352.76, 159102.76,
                        161057.15, 163111.60, 163861.60, 164611.60, 165900.01, 167410.99, 168699.40, 172400.00,
                        173932.43, 174793.18, 179500.00, 181454.39, 182417.30, 183949.74, 186004.19, 187958.58,
                        190013.03, 191301.44, 192812.42, 194766.81, 195627.56, 196488.31, 199100.00, 199960.75,
                        200923.67, 203300.00, 204700.00, 206800.00, 208088.40, 209620.84, 210583.75, 216500.00,
                        218400.00, 225600.00, 227110.99, 227860.99, 229149.39, 230681.82, 231542.57, 232505.49,
                        233255.49, 234787.92, 237100.00, 239700.00, 241200.00, 243000.00, 244532.43, 245500.00,
                        247010.99, 248500.00, 249788.40, 251320.84, 252181.59, 253042.34, 254005.25, 254755.25,
                        255505.25, 257016.24, 257766.24, 259054.64, 260587.08, 266200.00, 268254.45, 270208.84,
                        272263.30, 273551.70, 275062.69, 275900.00, 277854.39, 279908.84, 281863.23, 283917.68,
                        284667.68, 285417.68, 287372.07, 288334.98, 289867.42, 290728.17, 291588.92, 293643.37,
                        295597.76, 297652.21, 298402.21, 299152.21, 299902.21, 300652.21, 302606.60, 303467.35,
                        304430.27, 305180.27, 305930.27, 307441.25, 309395.64, 310358.56, 311869.54, 313157.95,
                        314690.38, 315551.13, 317605.59, 319559.97, 320420.72, 322475.18, 323225.18, 325179.56],
                       rtol=1e-4, atol=1e-5)
    assert np.allclose(erm.S,
                       [0.00, 1746.08, 3458.14, 9324.33, 10411.66, 13747.15, 14917.09, 21289.55, 23001.61, 24171.54,
                        25032.29, 26357.71, 27445.04, 29460.58, 30321.33, 31182.08, 33175.38, 34887.44, 35974.77,
                        37990.31, 38857.00, 39957.00, 41950.30, 42089.15, 44412.36, 45582.29, 46443.04, 47821.67,
                        48946.08, 52047.15, 52724.33, 53524.33, 54634.48, 54773.34, 63147.15, 64234.48, 64373.34,
                        66747.15, 67917.09, 69242.50, 73428.68, 74754.10, 75841.43, 77553.49, 78219.07, 79390.82,
                        81102.88, 82190.21, 83902.27, 84989.60, 85128.46, 87755.14, 88615.89, 89476.64, 91469.94,
                        91608.80, 93932.00, 96524.33, 97611.66, 99323.72, 100493.66, 102486.95, 102625.81, 106950.64,
                        107811.39, 111089.55, 113105.09, 113965.84, 114826.59, 116819.89, 118835.43, 120160.85,
                        120826.43, 121998.18, 123710.24, 124797.57, 126509.63, 127324.33, 131746.08, 140750.64,
                        141611.39, 143604.68, 145316.74, 146404.07, 148419.62, 149745.03, 150914.97, 151775.72,
                        153101.13, 153766.72, 154516.72, 155688.46, 157400.52, 158487.85, 158626.71, 161253.40,
                        163246.69, 163385.55, 164135.55, 166458.76, 167546.08, 169258.15, 169923.73, 174128.68,
                        174989.43, 176982.73, 181650.64, 182976.05, 184145.99, 186139.28, 188154.83, 190148.12,
                        191860.19, 192947.51, 194963.06, 195823.81, 196684.56, 197545.31, 200157.00, 201482.42,
                        202652.35, 204357.00, 206889.55, 208647.15, 209817.09, 211142.50, 212312.44, 217557.00,
                        219921.67, 227246.08, 227384.94, 229708.14, 230878.07, 231738.82, 233064.24, 233729.82,
                        234984.17, 236977.47, 239250.64, 240757.00, 242721.67, 244728.68, 246054.10, 247146.08,
                        247284.94, 250347.15, 251517.09, 252377.84, 253238.59, 254564.00, 255229.59, 255979.59,
                        257151.33, 257290.19, 259613.39, 260783.33, 261644.08, 268389.55, 270405.09, 272398.39,
                        274110.45, 275197.78, 275336.64, 278050.64, 280043.93, 282059.48, 284052.77, 284191.63,
                        284941.63, 287568.32, 288893.73, 290063.67, 290924.42, 291785.17, 293778.46, 295794.01,
                        297787.31, 297926.16, 298676.16, 299426.16, 300176.16, 302802.85, 303663.60, 304989.02,
                        305654.60, 306404.60, 307576.34, 309591.89, 310917.31, 312004.63, 313716.70, 314886.63,
                        315747.38, 317740.68, 319756.22, 320616.97, 322610.27, 322749.13, 325375.81, 327369.11],
                       rtol=1e-4, atol=1e-5)
    assert np.allclose(erm.C,
                       [1873.00, 3789.08, 5331.14, 11197.33, 12454.66, 15620.15, 16790.09, 23332.55, 24874.61, 26044.54,
                        26905.29, 28230.71, 29488.04, 31333.58, 32194.33, 33055.08, 35218.38, 36760.44, 38017.77,
                        39863.31, 40730.00, 41830.00, 43993.30, 44743.30, 46285.36, 47455.29, 48316.04, 49694.67,
                        50989.08, 53920.15, 54670.15, 55420.15, 56677.48, 57427.48, 65020.15, 66277.48, 67027.48,
                        68620.15, 69790.09, 71115.50, 75301.68, 76627.10, 77884.43, 79426.49, 80176.49, 81433.82,
                        82975.88, 84233.21, 85775.27, 87032.60, 87782.60, 89628.14, 90488.89, 91349.64, 93512.94,
                        94262.94, 95805.00, 98397.33, 99654.66, 101196.72, 102366.66, 104529.95, 105279.95, 108823.64,
                        109684.39, 113132.55, 114978.09, 115838.84, 116699.59, 118862.89, 120708.43, 122033.85,
                        122783.85, 124041.18, 125583.24, 126840.57, 128382.63, 129197.33, 133789.08, 142623.64,
                        143484.39, 145647.68, 147189.74, 148447.07, 150292.62, 151618.03, 152787.97, 153648.72,
                        154974.13, 155724.13, 156474.13, 157731.46, 159273.52, 160530.85, 161280.85, 163126.40,
                        165289.69, 166039.69, 166789.69, 168331.76, 169589.08, 171131.15, 171881.15, 176001.68,
                        176862.43, 179025.73, 183523.64, 184849.05, 186018.99, 188182.28, 190027.83, 192191.12,
                        193733.19, 194990.51, 196836.06, 197696.81, 198557.56, 199418.31, 202030.00, 203355.42,
                        204525.35, 206230.00, 208932.55, 210520.15, 211690.09, 213015.50, 214185.44, 219430.00,
                        221794.67, 229289.08, 230039.08, 231581.14, 232751.07, 233611.82, 234937.24, 235687.24,
                        236857.17, 239020.47, 241123.64, 242630.00, 244594.67, 246601.68, 247927.10, 249189.08,
                        249939.08, 252220.15, 253390.09, 254250.84, 255111.59, 256437.00, 257187.00, 257937.00,
                        259194.33, 259944.33, 261486.39, 262656.33, 263517.08, 270432.55, 272278.09, 274441.39,
                        275983.45, 277240.78, 277990.78, 279923.64, 282086.93, 283932.48, 286095.77, 286845.77,
                        287595.77, 289441.32, 290766.73, 291936.67, 292797.42, 293658.17, 295821.46, 297667.01,
                        299830.31, 300580.31, 301330.31, 302080.31, 302830.31, 304675.85, 305536.60, 306862.02,
                        307612.02, 308362.02, 309619.34, 311464.89, 312790.31, 314047.63, 315589.70, 316759.63,
                        317620.38, 319783.68, 321629.22, 322489.97, 324653.27, 325403.27, 327248.81, 329412.11],
                       rtol=1e-4, atol=1e-5)
    assert np.allclose(erm.Vm,
                       [-558.75, 1610.99, 2899.39, 8765.58, 10276.57, 13188.40, 14720.84, 21154.45, 22442.86, 23975.29,
                        24836.04, 25798.96, 27309.95, 29264.33, 30125.08, 30985.83, 33040.29, 34328.69, 35839.68,
                        37794.06, 38660.75, 39760.75, 41815.20, 42565.20, 43853.61, 45386.04, 46246.79, 47262.92,
                        48810.99, 51488.40, 52238.40, 52988.40, 54499.39, 55249.39, 62588.40, 64099.39, 64849.39,
                        66188.40, 67720.84, 68683.75, 73232.43, 74195.35, 75706.34, 76994.74, 77744.74, 79255.73,
                        80544.13, 82055.12, 83343.52, 84854.51, 85604.51, 87558.89, 88419.64, 89280.39, 91334.85,
                        92084.85, 93373.25, 95965.58, 97476.57, 98764.97, 100297.41, 102351.86, 103101.86, 106754.39,
                        107615.14, 110954.45, 112908.84, 113769.59, 114630.34, 116684.80, 118639.18, 119602.10,
                        120352.10, 121863.08, 123151.49, 124662.47, 125950.88, 126765.58, 131610.99, 140554.39,
                        141415.14, 143469.59, 144757.99, 146268.98, 148223.37, 149186.28, 150718.72, 151579.47,
                        152542.38, 153292.38, 154042.38, 155553.37, 156841.77, 158352.76, 159102.76, 161057.15,
                        163111.60, 163861.60, 164611.60, 165900.01, 167410.99, 168699.40, 169449.40, 173932.43,
                        174793.18, 176847.64, 181454.39, 182417.30, 183949.74, 186004.19, 187958.58, 190013.03,
                        191301.44, 192812.42, 194766.81, 195627.56, 196488.31, 197349.06, 199960.75, 200923.67,
                        202456.10, 204160.75, 206754.45, 208088.40, 209620.84, 210583.75, 212116.19, 217360.75,
                        219362.92, 227110.99, 227860.99, 229149.39, 230681.82, 231542.57, 232505.49, 233255.49,
                        234787.92, 236842.38, 239054.39, 240560.75, 242162.92, 244532.43, 245495.35, 247010.99,
                        247760.99, 249788.40, 251320.84, 252181.59, 253042.34, 254005.25, 254755.25, 255505.25,
                        257016.24, 257766.24, 259054.64, 260587.08, 261447.83, 268254.45, 270208.84, 272263.30,
                        273551.70, 275062.69, 275812.69, 277854.39, 279908.84, 281863.23, 283917.68, 284667.68,
                        285417.68, 287372.07, 288334.98, 289867.42, 290728.17, 291588.92, 293643.37, 295597.76,
                        297652.21, 298402.21, 299152.21, 299902.21, 300652.21, 302606.60, 303467.35, 304430.27,
                        305180.27, 305930.27, 307441.25, 309395.64, 310358.56, 311869.54, 313157.95, 314690.38,
                        315551.13, 317605.59, 319559.97, 320420.72, 322475.18, 323225.18, 325179.56, 327234.02],
                       rtol=1e-4, atol=1e-5)
    assert np.allclose(erm.Vp,
                       [-558.75, 1610.99, 2899.39, 8765.58, 10276.57, 13188.40, 14720.84, 21154.45, 22442.86, 23975.29,
                        24836.04, 25798.96, 27309.95, 29264.33, 30125.08, 30985.83, 33040.29, 34328.69, 35839.68,
                        37794.06, 38660.75, 39760.75, 41815.20, 42565.20, 43853.61, 45386.04, 46246.79, 47262.92,
                        48810.99, 51488.40, 52238.40, 52988.40, 54499.39, 55249.39, 62588.40, 64099.39, 64849.39,
                        66188.40, 67720.84, 68683.75, 73232.43, 74195.35, 75706.34, 76994.74, 77744.74, 79255.73,
                        80544.13, 82055.12, 83343.52, 84854.51, 85604.51, 87558.89, 88419.64, 89280.39, 91334.85,
                        92084.85, 93373.25, 95965.58, 97476.57, 98764.97, 100297.41, 102351.86, 103101.86, 106754.39,
                        107615.14, 110954.45, 112908.84, 113769.59, 114630.34, 116684.80, 118639.18, 119602.10,
                        120352.10, 121863.08, 123151.49, 124662.47, 125950.88, 126765.58, 131610.99, 140554.39,
                        141415.14, 143469.59, 144757.99, 146268.98, 148223.37, 149186.28, 150718.72, 151579.47,
                        152542.38, 153292.38, 154042.38, 155553.37, 156841.77, 158352.76, 159102.76, 161057.15,
                        163111.60, 163861.60, 164611.60, 165900.01, 167410.99, 168699.40, 169449.40, 173932.43,
                        174793.18, 176847.64, 181454.39, 182417.30, 183949.74, 186004.19, 187958.58, 190013.03,
                        191301.44, 192812.42, 194766.81, 195627.56, 196488.31, 197349.06, 199960.75, 200923.67,
                        202456.10, 204160.75, 206754.45, 208088.40, 209620.84, 210583.75, 212116.19, 217360.75,
                        219362.92, 227110.99, 227860.99, 229149.39, 230681.82, 231542.57, 232505.49, 233255.49,
                        234787.92, 236842.38, 239054.39, 240560.75, 242162.92, 244532.43, 245495.35, 247010.99,
                        247760.99, 249788.40, 251320.84, 252181.59, 253042.34, 254005.25, 254755.25, 255505.25,
                        257016.24, 257766.24, 259054.64, 260587.08, 261447.83, 268254.45, 270208.84, 272263.30,
                        273551.70, 275062.69, 275812.69, 277854.39, 279908.84, 281863.23, 283917.68, 284667.68,
                        285417.68, 287372.07, 288334.98, 289867.42, 290728.17, 291588.92, 293643.37, 295597.76,
                        297652.21, 298402.21, 299152.21, 299902.21, 300652.21, 302606.60, 303467.35, 304430.27,
                        305180.27, 305930.27, 307441.25, 309395.64, 310358.56, 311869.54, 313157.95, 314690.38,
                        315551.13, 317605.59, 319559.97, 320420.72, 322475.18, 323225.18, 325179.56, 327234.02],
                       rtol=1e-4, atol=1e-5)

    # CT, LRT, TT
    assert np.allclose(erm.CT,
                       [1873.00, 3689.08, 4431.14, 3097.33, 3954.66, 3720.15, 4690.09, 4232.55, 4774.61, 5244.54,
                        6105.29, 3930.71, 4888.04, 5933.58, 4494.33, 3155.08, 5118.38, 6460.44, 6717.77, 6663.31,
                        2930.00, 2930.00, 4393.30, 3943.30, 5285.36, 5455.29, 3416.04, 3394.67, 3689.08, 3720.15,
                        3170.15, 3120.15, 3777.48, 3527.48, 3720.15, 4077.48, 4627.48, 3720.15, 3690.09, 3615.50,
                        3601.68, 4627.10, 5084.43, 4026.49, 4576.49, 5533.82, 5875.88, 6933.21, 8375.27, 7032.60,
                        5882.60, 7728.14, 7888.89, 5649.64, 7212.94, 7262.94, 6605.00, 3097.33, 4154.66, 5396.72,
                        4566.66, 5029.95, 4279.95, 4023.64, 3984.39, 4232.55, 6078.09, 5838.84, 5699.59, 6062.89,
                        7408.43, 7433.85, 8183.85, 8141.18, 5683.24, 6140.57, 7282.63, 3097.33, 3689.08, 4023.64,
                        3984.39, 6047.68, 6989.74, 5447.07, 5992.62, 6918.03, 6287.97, 5248.72, 4974.13, 4724.13,
                        4874.13, 5831.46, 6573.52, 6530.85, 5580.85, 7026.40, 5189.69, 5739.69, 6289.69, 6631.76,
                        6589.08, 6731.15, 7181.15, 3601.68, 4462.43, 4425.73, 4023.64, 4549.05, 4918.99, 5682.28,
                        5527.83, 6091.12, 6933.19, 4990.51, 6836.06, 6096.81, 5257.56, 5318.31, 2930.00, 3655.42,
                        3925.35, 2930.00, 4232.55, 3720.15, 4590.09, 4315.50, 3885.44, 2930.00, 3394.67, 3689.08,
                        4039.08, 4681.14, 4851.07, 5611.82, 5537.24, 5387.24, 5657.17, 6320.47, 4023.64, 2930.00,
                        3394.67, 3601.68, 4227.10, 3689.08, 3539.08, 3720.15, 4690.09, 5350.84, 5311.59, 6137.00,
                        6587.00, 7037.00, 6494.33, 3244.33, 4486.39, 5256.33, 5817.08, 4232.55, 5078.09, 6541.39,
                        3783.45, 4540.78, 4190.78, 4023.64, 4386.93, 5032.48, 5395.77, 5945.77, 5295.77, 6441.32,
                        5466.73, 6336.67, 6397.42, 6058.17, 6521.46, 7567.01, 7830.31, 8480.31, 9130.31, 9780.31,
                        9830.31, 11575.85, 12236.60, 13562.02, 11312.02, 11862.02, 11919.34, 8764.89, 9190.31, 10147.63,
                        11589.70, 11159.63, 9120.38, 11083.68, 10529.22, 10589.97, 10153.27, 10103.27, 11948.81,
                        13812.11], rtol=1e-4, atol=1e-5)
    assert np.allclose(erm.LRT,
                       [1873, 2043, 1873, 1873, 2043, 1873, 1873, 2043, 1873, 1873, 1873, 1873, 2043, 1873, 1873, 1873,
                        2043, 1873, 2043, 1873, 1873, 1873, 2043, 2654.140909, 1873, 1873, 1873, 1873, 2043, 1873,
                        1945.820513, 1895.820513, 2043, 2654.140909, 1873, 2043, 2654.140909, 1873, 1873, 1873, 1873,
                        1873, 2043, 1873, 1957.416667, 2043, 1873, 2043, 1873, 2043, 2654.140909, 1873, 1873, 1873,
                        2043, 2654.140909, 1873, 1873, 2043, 1873, 1873, 2043, 2654.140909, 1873, 1873, 2043, 1873,
                        1873, 1873, 2043, 1873, 1873, 1957.416667, 2043, 1873, 2043, 1873, 1873, 2043, 1873, 1873, 2043,
                        1873, 2043, 1873, 1873, 1873, 1873, 1873, 1957.416667, 1957.416667, 2043, 1873, 2043,
                        2654.140909, 1873, 2043, 2654.140909, 2654.140909, 1873, 2043, 1873, 1957.416667, 1873, 1873,
                        2043, 1873, 1873, 1873, 2043, 1873, 2043, 1873, 2043, 1873, 1873, 1873, 1873, 1873, 1873, 1873,
                        1873, 2043, 1873, 1873, 1873, 1873, 1873, 1873, 2043, 2654.140909, 1873, 1873, 1873, 1873,
                        1957.416667, 1873, 2043, 1873, 1873, 1873, 1873, 1873, 2043, 2654.140909, 1873, 1873, 1873,
                        1873, 1873, 1957.416667, 1957.416667, 2043, 2654.140909, 1873, 1873, 1873, 2043, 1873, 2043,
                        1873, 2043, 2654.140909, 1873, 2043, 1873, 2043, 2654.140909, 2654.140909, 1873, 1873, 1873,
                        1873, 1873, 2043, 1873, 2043, 2654.140909, 2654.140909, 2654.140909, 2654.140909, 1873, 1873,
                        1873, 1957.416667, 1957.416667, 2043, 1873, 1873, 2043, 1873, 1873, 1873, 2043, 1873, 1873,
                        2043, 2654.140909, 1873, 2043],
                       rtol=1e-4, atol=1e-5)
    assert np.allclose(erm.TT,
                       [1873, 1916.076923, 1542.062937, 1873, 1257.326923, 1873, 1169.934211, 2043, 1542.062937,
                        1169.934211, 860.75, 1325.416667, 1257.326923, 1845.545455, 860.75, 860.75, 2043, 1542.062937,
                        1257.326923, 1845.545455, 866.6875843, 1100, 2043, 750, 1542.062937, 1169.934211, 860.75,
                        1378.624065, 1294.410256, 1873, 750, 750, 1257.326923, 750, 1873, 1257.326923, 750, 1592.673077,
                        1169.934211, 1325.416667, 1873, 1325.416667, 1257.326923, 1542.062937, 750, 1257.326923,
                        1542.062937, 1257.326923, 1542.062937, 1257.326923, 750, 1845.545455, 860.75, 860.75, 2043, 750,
                        1542.062937, 1873, 1257.326923, 1542.062937, 1169.934211, 2043, 750, 1873, 860.75, 2043,
                        1845.545455, 860.75, 860.75, 2043, 1845.545455, 1325.416667, 750, 1257.326923, 1542.062937,
                        1257.326923, 1542.062937, 814.7051282, 2043, 1873, 860.75, 2043, 1542.062937, 1257.326923,
                        1845.545455, 1325.416667, 1169.934211, 860.75, 1325.416667, 750, 750, 1257.326923, 1542.062937,
                        1257.326923, 750, 1845.545455, 2043, 750, 750, 1542.062937, 1257.326923, 1542.062937, 750, 1873,
                        860.75, 2043, 1873, 1325.416667, 1169.934211, 2043, 1845.545455, 2043, 1542.062937, 1257.326923,
                        1845.545455, 860.75, 860.75, 860.75, 1873, 1325.416667, 1169.934211, 1704.649123, 2043,
                        1587.608392, 1169.934211, 1325.416667, 1169.934211, 1873, 1873, 2043, 750, 1542.062937,
                        1169.934211, 860.75, 1325.416667, 750, 1169.934211, 2043, 1873, 1506.363636, 1873, 1873,
                        1325.416667, 1261.976046, 750, 1873, 1169.934211, 860.75, 860.75, 1325.416667, 750, 750,
                        1257.326923, 750, 1542.062937, 1169.934211, 860.75, 2043, 1845.545455, 2043, 1542.062937,
                        1257.326923, 750, 1873, 2043, 1845.545455, 2043, 750, 750, 1845.545455, 1325.416667,
                        1169.934211, 860.75, 860.75, 2043, 1845.545455, 2043, 750, 750, 750, 750, 1845.545455, 860.75,
                        1325.416667, 750, 750, 1257.326923, 1845.545455, 1325.416667, 1257.326923, 1542.062937,
                        1169.934211, 860.75, 2043, 1845.545455, 860.75, 2043, 750, 1845.545455, 2043],
                       rtol=1e-4, atol=1e-5)
